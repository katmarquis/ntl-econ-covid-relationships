# -*- coding: utf-8 -*-
"""Data Validation and Visualizations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eteMsy4Yho05XZXVZ_GdUZGOCfbRTjXP
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime
import _strptime

from google.colab import drive
from google.colab import files
drive.mount('/content/drive')

path = "/content/drive/MyDrive/Undergrad/Junior Summer/SURF/data/"

"""## Covid-19 Case Data Validation"""

data = pd.read_csv(path + "data_final.csv",index_col=0)
data.head()

dates_lst = []
cases = []
months = []
years = []

dates = set(data["Date"].tolist())
dates = sorted(dates)
part_data = data[["Date","Month","Year","Total_Cases"]]
for d in dates:
  temp = part_data[part_data["Date"] == d]
  months.append(temp["Month"].tolist()[0])
  years.append(temp["Year"].tolist()[0])
  num = sum(temp["Total_Cases"].tolist())
  dates_lst.append(d)
  cases.append(num)

datetimes = []
for i in range(len(dates_lst)):
  m = months[i]
  y = years[i]
  new = datetime.date(int(y),int(m),1)
  datetimes.append(new)

nyt_data = pd.read_csv(path + "us.csv",index_col=0)
nyt_data.head()

nyt_cases = nyt_data["cases"].tolist()
nyt_dates = nyt_data.index.tolist()
nyt_datetimes = []
for d in nyt_dates:
  nyt_datetimes.append(datetime.datetime.strptime(d, '%Y-%m-%d'))

who_data = pd.read_csv(path + "WHO-COVID-19-global-data.csv",index_col=0)
who_data = who_data[(who_data["Country"] == 'United States of America')]
who_data.head()

who_dates = who_data.index
who_datetimes = []
for d in who_dates:
  who_datetimes.append(datetime.datetime.strptime(d, '%Y-%m-%d'))
who_cases = who_data["Cumulative_cases"].tolist()

plt.plot(who_datetimes, who_cases, label="WHO")
plt.plot(datetimes, cases, label="CSSE")
plt.plot(nyt_datetimes,nyt_cases,label="NYT")

plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Postive New Covid-19 Cases')
plt.title("Positive Covid-19 Cases in 2020-2023")
plt.show()

"""## NTL Data Validation"""

data = pd.read_csv(path + "past_ntl_data.csv",index_col=0)

months = []
years = []

for row in data.itertuples():
  date = row.Date
  date_lst = date.split("-")
  months.append(float(date_lst[1]))
  years.append(float(date_lst[0]))

data["Month"] = months
data["Year"] = years

data.head()

months = set(data["Month"].tolist())

lst_2018 = []
lst_2019 = []
lst_2020 = []

for month in months:
  temp_data = data[data["Month"] == month]
  data_2018 = temp_data[temp_data["Year"] == 2018]
  data_2019 = temp_data[temp_data["Year"] == 2019]
  data_2020 = temp_data[temp_data["Year"] == 2020]
  sum_2018 = sum(data_2018["Sum_of_Lights"].tolist())
  sum_2019 = sum(data_2019["Sum_of_Lights"].tolist())
  sum_2020 = sum(data_2020["Sum_of_Lights"].tolist())
  lst_2018.append(sum_2018)
  lst_2019.append(sum_2019)
  lst_2020.append(sum_2020)

months = list(months)
plt.plot(months, lst_2018, label="2018")
plt.plot(months, lst_2019, label="2019")
plt.plot(months, lst_2020, label="2020")
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Month')
plt.ylabel('Sum of Lights Radiance')
plt.title("Aggregate Sum of NTL Radiance from 2018-2020")
plt.show()

months = set(data["Month"].tolist())

lst = []

for month in months:
  temp_data = data[data["Month"] == month]
  data_2018 = temp_data[temp_data["Year"] == 2018]
  data_2019 = temp_data[temp_data["Year"] == 2019]
  data_2020 = temp_data[temp_data["Year"] == 2020]
  sum_2018 = sum(data_2018["Sum_of_Lights"].tolist())
  sum_2019 = sum(data_2019["Sum_of_Lights"].tolist())
  sum_2020 = sum(data_2020["Sum_of_Lights"].tolist())
  avg_past_ntl = (sum_2018 + sum_2019)/2
  lst.append((sum_2020 - avg_past_ntl)/avg_past_ntl)

months = list(months)
plt.plot(months, lst)
plt.gcf().autofmt_xdate()
plt.xlabel('Month')
plt.ylabel('Normality Divergence')
plt.title("Monthly Normality Divergence of Sum of Lights in 2020 with Respect to 2018-2019")
plt.show()

"""## Data Visualization"""

data_reg = pd.read_csv(path + "data_final.csv",index_col=0)
data_reg.head()

data_LA_reg = data_reg[data_reg["FIPS"] == 6037].sort_values(["Date"])
data_cook_reg = data_reg[data_reg["FIPS"] == 17031].sort_values(["Date"])
data_harris_reg = data_reg[data_reg["FIPS"] == 48201].sort_values(["Date"])
data_maricopa_reg = data_reg[data_reg["FIPS"] == 4013].sort_values(["Date"])

data_monterey_reg = data_reg[data_reg["FIPS"] == 6053].sort_values(["Date"])
data_dekalb_reg = data_reg[data_reg["FIPS"] == 17037].sort_values(["Date"])
data_hardin_reg = data_reg[data_reg["FIPS"] == 48199].sort_values(["Date"])
data_lapaz_reg = data_reg[data_reg["FIPS"] == 4012].sort_values(["Date"])

months = data_LA_reg["Month"].tolist()
years = data_LA_reg["Year"].tolist()
dates = []
for ind in range(len(months)):
  d = datetime.date(int(years[ind]), int(months[ind]), 1)
  dates.append(d)

cases_LA = data_LA_reg["Total_Cases"].tolist()
cases_cook = data_cook_reg["Total_Cases"].tolist()
cases_harris = data_harris_reg["Total_Cases"].tolist()
cases_harris.insert(0,0)
cases_maricopa = data_maricopa_reg["Total_Cases"].tolist()
cases_monterey = data_monterey_reg["Total_Cases"].tolist()
cases_dekalb = data_dekalb_reg["Total_Cases"].tolist()
cases_hardin = data_hardin_reg["Total_Cases"].tolist()
cases_lapaz = data_lapaz_reg["Total_Cases"].tolist()

plt.figure(figsize = (12,3))
plt.subplot(1,2,1)
plt.plot(dates, cases_LA, label="Los Angeles County, California")
plt.plot(dates, cases_cook, label="Cook County, Illinois")
plt.plot(dates, cases_harris, label="Harris County, Texas")
plt.plot(dates, cases_maricopa, label="Maricopa County, Arizona")
plt.plot(dates, cases_monterey)
plt.plot(dates, cases_dekalb)
plt.plot(dates, cases_hardin)
plt.plot(dates, cases_lapaz)
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Total Number of Cases')

rate_LA = data_LA_reg["Cumulative_Incidence_Rate"].tolist()
rate_cook = data_cook_reg["Cumulative_Incidence_Rate"].tolist()
rate_harris = data_harris_reg["Cumulative_Incidence_Rate"].tolist()
rate_harris.insert(0,np.NaN)
rate_maricopa = data_maricopa_reg["Cumulative_Incidence_Rate"].tolist()
rate_monterey = data_monterey_reg["Cumulative_Incidence_Rate"].tolist()
rate_dekalb = data_dekalb_reg["Cumulative_Incidence_Rate"].tolist()
rate_hardin = data_hardin_reg["Cumulative_Incidence_Rate"].tolist()
rate_lapaz = data_lapaz_reg["Cumulative_Incidence_Rate"].tolist()

plt.subplot(1,2,2)
plt.plot(dates, rate_LA)
plt.plot(dates, rate_cook)
plt.plot(dates, rate_harris)
plt.plot(dates, rate_maricopa)
plt.plot(dates, rate_monterey, label="Monterey County, California")
plt.plot(dates, rate_dekalb, label="DeKalb County, Illinois")
plt.plot(dates, rate_hardin, label="Hardin County, Texas")
plt.plot(dates, rate_lapaz, label="La Paz County, Arizona")
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Cumulative Incidence Rate')

plt.suptitle("Cumulative Covid-19 Infections in Various Counties in 2020-2023")
plt.show()

cases_LA = data_LA_reg["New_Cases"].tolist()
cases_cook = data_cook_reg["New_Cases"].tolist()
cases_harris = data_harris_reg["New_Cases"].tolist()
cases_harris.insert(0,0)
cases_maricopa = data_maricopa_reg["New_Cases"].tolist()
cases_monterey = data_monterey_reg["New_Cases"].tolist()
cases_dekalb = data_dekalb_reg["New_Cases"].tolist()
cases_hardin = data_hardin_reg["New_Cases"].tolist()
cases_lapaz = data_lapaz_reg["New_Cases"].tolist()

plt.figure(figsize = (12,3))
plt.subplot(1,2,1)
plt.plot(dates, cases_LA, label="Los Angeles County, California")
plt.plot(dates, cases_cook, label="Cook County, Illinois")
plt.plot(dates, cases_harris, label="Harris County, Texas")
plt.plot(dates, cases_maricopa, label="Maricopa County, Arizona")
plt.plot(dates, cases_monterey)
plt.plot(dates, cases_dekalb)
plt.plot(dates, cases_hardin)
plt.plot(dates, cases_lapaz)
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Number of Cases')

rate_LA = data_LA_reg["Incidence_Rate"].tolist()
rate_cook = data_cook_reg["Incidence_Rate"].tolist()
rate_harris = data_harris_reg["Incidence_Rate"].tolist()
rate_harris.insert(0,np.NaN)
rate_maricopa = data_maricopa_reg["Incidence_Rate"].tolist()
rate_monterey = data_monterey_reg["Incidence_Rate"].tolist()
rate_dekalb = data_dekalb_reg["Incidence_Rate"].tolist()
rate_hardin = data_hardin_reg["Incidence_Rate"].tolist()
rate_lapaz = data_lapaz_reg["Incidence_Rate"].tolist()

plt.subplot(1,2,2)
plt.plot(dates, rate_LA)
plt.plot(dates, rate_cook)
plt.plot(dates, rate_harris)
plt.plot(dates, rate_maricopa)
plt.plot(dates, rate_monterey, label="Monterey County, California")
plt.plot(dates, rate_dekalb, label="DeKalb County, Illinois")
plt.plot(dates, rate_hardin, label="Hardin County, Texas")
plt.plot(dates, rate_lapaz, label="La Paz County, Arizona")
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Incidence Rate')

plt.suptitle("Monthly Covid-19 Infections in Various Counties in 2020-2023")
plt.show()

vax_LA = data_LA_reg["Series_Complete_Pct"].tolist()
vax_cook = data_cook_reg["Series_Complete_Pct"].tolist()
vax_harris = data_harris_reg["Series_Complete_Pct"].tolist()
vax_harris.insert(0,np.NaN)
vax_maricopa = data_maricopa_reg["Series_Complete_Pct"].tolist()
vax_monterey = data_monterey_reg["Series_Complete_Pct"].tolist()
vax_dekalb = data_dekalb_reg["Series_Complete_Pct"].tolist()
vax_hardin = data_hardin_reg["Series_Complete_Pct"].tolist()
vax_lapaz = data_lapaz_reg["Series_Complete_Pct"].tolist()

plt.figure(figsize = (12,3))
plt.subplot(1,2,1)
plt.plot(dates, vax_LA, label="Los Angeles County, California")
plt.plot(dates, vax_cook, label="Cook County, Illinois")
plt.plot(dates, vax_harris, label="Harris County, Texas")
plt.plot(dates, vax_maricopa, label="Maricopa County, Arizona")
plt.plot(dates, vax_monterey)
plt.plot(dates, vax_dekalb)
plt.plot(dates, vax_hardin)
plt.plot(dates, vax_lapaz)
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Vaccinated Population Percentage')

rat_LA = data_LA_reg["Death_Rate"].tolist()
rat_cook = data_cook_reg["Death_Rate"].tolist()
rat_harris = data_harris_reg["Death_Rate"].tolist()
rat_harris.insert(0,np.NaN)
rat_maricopa = data_maricopa_reg["Death_Rate"].tolist()
rat_monterey = data_monterey_reg["Death_Rate"].tolist()
rat_dekalb = data_dekalb_reg["Death_Rate"].tolist()
rat_hardin = data_hardin_reg["Death_Rate"].tolist()
rat_lapaz = data_lapaz_reg["Death_Rate"].tolist()

plt.subplot(1,2,2)
plt.plot(dates, rat_LA)
plt.plot(dates, rat_cook)
plt.plot(dates, rat_harris)
plt.plot(dates, rat_maricopa)
plt.plot(dates, rat_monterey, label="Monterey County, California")
plt.plot(dates, rat_dekalb, label="DeKalb County, Illinois")
plt.plot(dates, rat_hardin, label="Hardin County, Texas")
plt.plot(dates, rat_lapaz, label="La Paz County, Arizona")
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Death Rate')

plt.suptitle("Covid-19 Vaccinations and Deaths in Various Counties in 2020-2023")
plt.show()

emp_LA = data_LA_reg["Employment_Rate"].tolist()
emp_cook = data_cook_reg["Employment_Rate"].tolist()
emp_harris = data_harris_reg["Employment_Rate"].tolist()
emp_harris.insert(0,np.NaN)
emp_maricopa = data_maricopa_reg["Employment_Rate"].tolist()
emp_monterey = data_monterey_reg["Employment_Rate"].tolist()
emp_dekalb = data_dekalb_reg["Employment_Rate"].tolist()
emp_hardin = data_hardin_reg["Employment_Rate"].tolist()
emp_lapaz = data_lapaz_reg["Employment_Rate"].tolist()

plt.figure(figsize = (12,3))
plt.subplot(1,2,1)
plt.plot(dates, emp_LA, label="Los Angeles County, California")
plt.plot(dates, emp_cook, label="Cook County, Illinois")
plt.plot(dates, emp_harris, label="Harris County, Texas")
plt.plot(dates, emp_maricopa, label="Maricopa County, Arizona")
plt.plot(dates, emp_monterey)
plt.plot(dates, emp_dekalb)
plt.plot(dates, emp_hardin)
plt.plot(dates, emp_lapaz)
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Employment Rate')

rat_LA = data_LA_reg["UI_Rate"].tolist()
rat_cook = data_cook_reg["UI_Rate"].tolist()
rat_harris = data_harris_reg["UI_Rate"].tolist()
rat_harris.insert(0,np.NaN)
rat_maricopa = data_maricopa_reg["UI_Rate"].tolist()
rat_monterey = data_monterey_reg["UI_Rate"].tolist()
rat_dekalb = data_dekalb_reg["UI_Rate"].tolist()
rat_hardin = data_hardin_reg["UI_Rate"].tolist()
rat_lapaz = data_lapaz_reg["UI_Rate"].tolist()

plt.subplot(1,2,2)
plt.plot(dates, rat_LA)
plt.plot(dates, rat_cook)
plt.plot(dates, rat_harris)
plt.plot(dates, rat_maricopa)
plt.plot(dates, rat_monterey, label="Monterey County, California")
plt.plot(dates, rat_dekalb, label="DeKalb County, Illinois")
plt.plot(dates, rat_hardin, label="Hardin County, Texas")
plt.plot(dates, rat_lapaz, label="La Paz County, Arizona")
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Unemployment Insurance Claim Rate')

plt.suptitle("Employment in Various Counties in 2020-2023")
plt.show()

ntl_LA = data_LA_reg["NTL_Normality_Divergence"].tolist()
ntl_cook = data_cook_reg["NTL_Normality_Divergence"].tolist()
ntl_harris = data_harris_reg["NTL_Normality_Divergence"].tolist()
ntl_harris.insert(0,np.NaN)
ntl_maricopa = data_maricopa_reg["NTL_Normality_Divergence"].tolist()
ntl_monterey = data_monterey_reg["NTL_Normality_Divergence"].tolist()
ntl_dekalb = data_dekalb_reg["NTL_Normality_Divergence"].tolist()
ntl_hardin = data_hardin_reg["NTL_Normality_Divergence"].tolist()
ntl_lapaz = data_lapaz_reg["NTL_Normality_Divergence"].tolist()

plt.plot(dates[:11], ntl_LA[:11], label="Los Angeles County, California")
plt.plot(dates[:11], ntl_cook[:11], label="Cook County, Illinois")
plt.plot(dates[:11], ntl_harris[:11], label="Harris County, Texas")
plt.plot(dates[:11], ntl_maricopa[:11], label="Maricopa County, Arizona")
plt.plot(dates[:11], ntl_monterey[:11], label="Monterey County, California")
plt.plot(dates[:11], ntl_dekalb[:11], label="DeKalb County, Illinois")
plt.plot(dates[:11], ntl_hardin[:11], label="Hardin County, Texas")
plt.plot(dates[:11], ntl_lapaz[:11], label="La Paz County, Arizona")
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Normality Divergence')

plt.suptitle("Normality Divergence of Sum of Lights in Various Counties")
plt.show()

ntl_LA = data_LA_reg["NTL_SOL"].tolist()
ntl_cook = data_cook_reg["NTL_SOL"].tolist()
ntl_harris = data_harris_reg["NTL_SOL"].tolist()
ntl_harris.insert(0,np.NaN)
ntl_maricopa = data_maricopa_reg["NTL_SOL"].tolist()
ntl_monterey = data_monterey_reg["NTL_SOL"].tolist()
ntl_dekalb = data_dekalb_reg["NTL_SOL"].tolist()
ntl_hardin = data_hardin_reg["NTL_SOL"].tolist()
ntl_lapaz = data_lapaz_reg["NTL_SOL"].tolist()

plt.figure(figsize = (12,3))
plt.subplot(1,2,1)
plt.plot(dates, ntl_LA, label="Los Angeles County, California")
plt.plot(dates, ntl_cook, label="Cook County, Illinois")
plt.plot(dates, ntl_harris, label="Harris County, Texas")
plt.plot(dates, ntl_maricopa, label="Maricopa County, Arizona")
plt.plot(dates, ntl_monterey)
plt.plot(dates, ntl_dekalb)
plt.plot(dates, ntl_hardin)
plt.plot(dates, ntl_lapaz)
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('NTL Mean wrt Population')

rat_LA = data_LA_reg["NTL_SOL_wrt_Population"].tolist()
rat_cook = data_cook_reg["NTL_SOL_wrt_Population"].tolist()
rat_harris = data_harris_reg["NTL_SOL_wrt_Population"].tolist()
rat_harris.insert(0,np.NaN)
rat_maricopa = data_maricopa_reg["NTL_SOL_wrt_Population"].tolist()
rat_monterey = data_monterey_reg["NTL_SOL_wrt_Population"].tolist()
rat_dekalb = data_dekalb_reg["NTL_SOL_wrt_Population"].tolist()
rat_hardin = data_hardin_reg["NTL_SOL_wrt_Population"].tolist()
rat_lapaz = data_lapaz_reg["NTL_SOL_wrt_Population"].tolist()

plt.subplot(1,2,2)
plt.plot(dates, rat_LA)
plt.plot(dates, rat_cook)
plt.plot(dates, rat_harris)
plt.plot(dates, rat_maricopa)
plt.plot(dates, rat_monterey, label="Monterey County, California")
plt.plot(dates, rat_dekalb, label="DeKalb County, Illinois")
plt.plot(dates, rat_hardin, label="Hardin County, Texas")
plt.plot(dates, rat_lapaz, label="La Paz County, Arizona")
plt.legend()
plt.gcf().autofmt_xdate()
plt.xlabel('Date')
plt.ylabel('Sum of Lights wrt Population')

plt.suptitle("Nighttime Light (NTL) in Various Counties in 2020-2023")
plt.show()